data.table(x=list(result[[x]]))}))
names(list_dt)<-names(result[!vector_response])
proj_dt = cbind(vector_dt,list_dt)
proj_dt
},cl = 4)
dt_list = dt_list[sapply(dt_list,class)!='try-error']
all_dt  = rbindlist(dt_list,use.names=T,fill = T)
if(nrow(all_dt)>0){
dets = rbind(dets,all_dt,use.names = T,fill = T)
}
saveRDS(dets,det_file)
library(rvest)
library(data.table)
library(httr)
library(stringr)
library(xml2)
require(RSelenium)
require(wdman)
require(doParallel)
base = 'https://eplanning.blm.gov/'
blm_proj = fread('agency_nepa_libraries/blm/metadata/new_project_record.csv')
det_file = 'agency_nepa_libraries/blm/metadata/new_project_record_detailed.rds'
if(file.exists(det_file)){dets = readRDS(det_file)}else{dets = data.table()}
blm_proj$pnum = str_extract(blm_proj$link,'[0-9]{1,}$')
blm_proj = blm_proj[!blm_proj$pnum %in% dets$projectId,]
blm_proj
dets$projectDescription
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(stringr)){install.packages('stringr');require(stringr)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(doParallel)){install.packages('doParallel');require(doParallel)}
if(!require(pdftools)){install.packages('pdftools');require(pdftools)}
floc = 'enepa_repository/documents/'
dir.create('enepa_repository/text_as_datatable')
tfloc = 'enepa_repository/text_as_datatable/'
docs = list.files(floc,recursive = T,full.names = T)
text_docs = list.files(tfloc,recursive = T,full.names = T)
doc_record = fread('enepa_repository/meta_data/eis_document_record.csv')
mcores = detectCores() / 2
doc_record = doc_record[PDF==T&!BAD_FILE,]
doc_record$subd = str_extract(doc_record$File_Name,'^[0-9]{4}')
text_names = paste0(tfloc,'/',doc_record$subd,'/',gsub('PDF$|pdf$','txt',doc_record$File_Name))
flt = list.files('enepa_repository/text_as_datatable/2013',full.names = T)
finfo = file.info(flt)
library(lubridate)
old = month(ymd_hms(finfo$mtime))!=5
pdf_list = list.files('enepa_repository/documents/',recursive = T,full.names = T,pattern = '^2020|^201[3-9]')
#pdf_list = pdf_list[grepl('^201[3-9]',basename(pdf_list))]
pdf_list = gsub('_{2,}','_',pdf_list)
text_list = list.files('enepa_repository/text_as_datatable/',recursive = T,full.names = T,pattern = '201[3-9]')
text_list = text_list[grepl('^2020|^201[3-9]',basename(text_list))]
#docs_unconverted = doc_record[!file.exists(text_names),]
#docs_unconverted[EIS.Number=='201600457',]
docs_unconverted <- pdf_list[!gsub('pdf$|PDF$','txt',basename(pdf_list)) %in% basename(text_list)]
docs_unconverted = docs_unconverted[grepl('2020',basename(docs_unconverted))]
docs_unconverted
grep('20150106',docs_unconverted,value = T)
finfo = file.info(text_list)
finfo$size
finfo
rownames(finfo)
grep('20150106',text_list)
grep('20150106',text_list,value = T)
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(stringr)){install.packages('stringr');require(stringr)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(doParallel)){install.packages('doParallel');require(doParallel)}
if(!require(pdftools)){install.packages('pdftools');require(pdftools)}
floc = 'enepa_repository/documents/'
dir.create('enepa_repository/text_as_datatable')
tfloc = 'enepa_repository/text_as_datatable/'
docs = list.files(floc,recursive = T,full.names = T)
text_docs = list.files(tfloc,recursive = T,full.names = T)
doc_record = fread('enepa_repository/meta_data/eis_document_record.csv')
mcores = detectCores() / 2
doc_record = doc_record[PDF==T&!BAD_FILE,]
doc_record$subd = str_extract(doc_record$File_Name,'^[0-9]{4}')
text_names = paste0(tfloc,'/',doc_record$subd,'/',gsub('PDF$|pdf$','txt',doc_record$File_Name))
flt = list.files('enepa_repository/text_as_datatable/2013',full.names = T)
finfo = file.info(flt)
library(lubridate)
old = month(ymd_hms(finfo$mtime))!=5
pdf_list = list.files('enepa_repository/documents/',recursive = T,full.names = T,pattern = '^2020|^201[3-9]')
#pdf_list = pdf_list[grepl('^201[3-9]',basename(pdf_list))]
pdf_list = gsub('_{2,}','_',pdf_list)
text_list = list.files('enepa_repository/text_as_datatable/',recursive = T,full.names = T,pattern = '20[1-2][0-9]')
text_list = text_list[grepl('^2020|^201[3-9]',basename(text_list))]
grep('20150106',text_list,value = T)
text_list = list.files('enepa_repository/text_as_datatable/',recursive = T,full.names = T)
text_list = text_list[grepl('^2020|^201[3-9]',basename(text_list))]
grep('20150106',text_list,value = T)
grep('2015',text_list,value = T)
finfo = file.info(pdf_list)
finfo$size
grep('20150106',pdf_list,value = T)
grep('20150106',pdf_list,value = F)
finfo = file.info(pdf_list[grep('20150106',pdf_list,value = F)])
finfo$size
finfo = file.info(pdf_list)
file.remove(pdf_list[finfo$size==0])
library(rvest)
library(stringr)
library(tidyverse)
library(httr)
library(data.table)
file_storage = 'enepa_repository/documents/'
record_df = fread('enepa_repository/meta_data/eis_record_detail.csv',stringsAsFactors = F)
record_df = record_df %>% mutate_if(is.logical,as.character)
record_df = data.table(record_df)
record_df = record_df[order(-EIS.Number)]
docs = fread('enepa_repository/meta_data/eis_document_record.csv',stringsAsFactors = F)
current_flist = list.files(file_storage,recursive = T)
docs$YEAR = str_extract(docs$EIS.Number,'^[0-9]{4}')
docs = docs[YEAR>=2012,]
#needed_docs = docs[!paste(docs$YEAR,docs$File_Name,sep = '/') %in% current_flist,]
doc_df = data.table(EIS.Number = as.numeric(),Original_File_Name = as.character(),
File_Name =as.character(),BAD_FILE =  logical(),PDF = logical(),stringsAsFactors = F)
base_page = 'https://cdxnodengn.epa.gov'
finfo = file.info(paste0(file_storage,current_flist))
not_empty = finfo$size>0
if(any(!not_empty)){
file.remove(paste0(file_storage,current_flist[!not_empty]))
current_flist = current_flist[not_empty]
}
record_df$YEAR = str_extract(record_df$EIS.Number,'^[0-9]{4}')
#record_df = record_df[YEAR %in% 2013:2019,]
record_df
record_df[EIS.Number=='20150106']
which(record_df$EIS.Number=='20150106')
i = 1670
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
if(length(file_url)==0){next}
for (j in 1:length(file_url)){
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(!dir.exists(paste0(file_storage,subd))){dir.create(paste0(file_storage,subd))}
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
temp_info = file.info(temp_name)
if(is.null(download)){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!is.null(download)){
temp_info$size = file.info(temp_name)
if(temp_info$size==0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(temp_info$size>0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
}
}
doc_df = rbind(doc_df,tdf,use.names = T,fill = T)
}
record_df[i,]
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
file_names
file_url
file.info(file_url)
url_ok(file_url[1])
paste0(base_page,file_url[1])
url_ok(paste0(base_page,file_url[1]))
url_ok(paste0(base_page,file_url[2]))
file_url = paste0(base_page,file_url[2])
curl_cmd = paste('curl -X HEAD -i', file_url)
system_cmd = paste(curl_cmd, '|grep Content-Length |cut -d : -f 2')
system_cmd
b <- system(system_cmd, intern = TRUE)
b
j = 1
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
tdf
file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))
!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))
paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
file.size(temp_name)
file_names
file_names[j]
file_names[j] %in% file_names[-j]
i = 1670
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
if(length(file_url)==0){next}
for (j in 1:length(file_url)){
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(!dir.exists(paste0(file_storage,subd))){dir.create(paste0(file_storage,subd))}
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
temp_info = file.info(temp_name)
if(is.null(download)){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!is.null(download)){
temp_info$size = file.info(temp_name)
if(file.size(temp_name)==0&all(duplicated(file_names))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(file.size(temp_name)==0&file_names[j] %in% file_names[-j]){
next
}
if(file.size(temp_name)>0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
}
}
doc_df = rbind(doc_df,tdf,use.names = T,fill = T)
}
for (i in 16701)#:nrow(record_df))
{
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
if(length(file_url)==0){next}
for (j in 1:length(file_url)){
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(!dir.exists(paste0(file_storage,subd))){dir.create(paste0(file_storage,subd))}
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
temp_info = file.info(temp_name)
if(is.null(download)){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!is.null(download)){
temp_info$size = file.info(temp_name)
if(file.size(temp_name)==0&all(duplicated(file_names))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(file.size(temp_name)==0&file_names[j] %in% file_names[-j]){
file.remove(temp_name)
next
}
if(file.size(temp_name)>0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
}
}
doc_df = rbind(doc_df,tdf,use.names = T,fill = T)
}
write.csv(x = doc_df,file = paste0('enepa_repository/meta_data/eis_document_record','.csv'),row.names = F)
}
i = 1670
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
if(length(file_url)==0){next}
for (j in 1:length(file_url)){
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(!dir.exists(paste0(file_storage,subd))){dir.create(paste0(file_storage,subd))}
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
temp_info = file.info(temp_name)
if(is.null(download)){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!is.null(download)){
temp_info$size = file.info(temp_name)
if(file.size(temp_name)==0&all(duplicated(file_names))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(file.size(temp_name)==0&file_names[j] %in% file_names[-j]){
file.remove(temp_name)
next
}
if(file.size(temp_name)>0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
}
}
doc_df = rbind(doc_df,tdf,use.names = T,fill = T)
}
write.csv(x = doc_df,file = paste0('enepa_repository/meta_data/eis_document_record','.csv'),row.names = F)
i = which(record_df$EIS.Number=='20150273')
record_df[i,]
i = which(record_df$EIS.Number=='20150287')
record_df[i,]
i = which(record_df$EIS.Number=='20150287')
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
file_names
for (j in 1:length(file_url)){
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(!dir.exists(paste0(file_storage,subd))){dir.create(paste0(file_storage,subd))}
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
temp_info = file.info(temp_name)
if(is.null(download)){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!is.null(download)){
temp_info$size = file.info(temp_name)
if(file.size(temp_name)==0&all(duplicated(file_names))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(file.size(temp_name)==0&file_names[j] %in% file_names[-j]){
file.remove(temp_name)
next
}
if(file.size(temp_name)>0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
}
}
doc_df = rbind(doc_df,tdf,use.names = T,fill = T)
}
write.csv(x = doc_df,file = paste0('enepa_repository/meta_data/eis_document_record','.csv'),row.names = F)
i = which(record_df$EIS.Number=='20150287')
Sys.sleep(0.25)
print(record_df$EIS.Number[i])
htmlNodes = record_df$eis_url[i] %>% read_html()  %>% html_nodes('a')
file_url = grep('downloadAttachment',htmlNodes %>% html_attr('href') ,value=T)
file_names = {htmlNodes %>% html_text()}[grepl('downloadAttachment',htmlNodes %>% html_attr('href'))]
file_names = gsub('~|/','-',file_names)
file_names = gsub('\\s{1,}','_',file_names)
if(length(file_url)==0){next}
for (j in 1:length(file_url)){
subd = str_extract(record_df$EIS.Number[i],'^[0-9]{4}')
if(!dir.exists(paste0(file_storage,subd))){dir.create(paste0(file_storage,subd))}
if(file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!file.exists(paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_')))){
temp_name = paste0(file_storage,subd,'/',paste(record_df$EIS.Number[i],file_names[j],sep='_'))
download = tryCatch(httr::GET(paste0(base_page,file_url[j]), verbose(),write_disk(temp_name), overwrite=TRUE),error=function(e) NULL)
temp_info = file.info(temp_name)
if(is.null(download)){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(!is.null(download)){
temp_info$size = file.info(temp_name)
if(file.size(temp_name)==0&all(duplicated(file_names))){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=T,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
if(file.size(temp_name)==0&file_names[j] %in% file_names[-j]){
file.remove(temp_name)
next
}
if(file.size(temp_name)>0){
tdf = data.frame(EIS.Number = record_df$EIS.Number[i],Original_File_Name = file_names[j],File_Name = paste(record_df$EIS.Number[i],file_names[j],sep='_'),BAD_FILE=F,PDF = grepl('PDF$',toupper(file_names[j])),stringsAsFactors = F)
}
}
}
doc_df = rbind(doc_df,tdf,use.names = T,fill = T)
}
write.csv(x = doc_df,file = paste0('enepa_repository/meta_data/eis_document_record','.csv'),row.names = F)
finfo = file.size(pdf_list)
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(stringr)){install.packages('stringr');require(stringr)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(doParallel)){install.packages('doParallel');require(doParallel)}
if(!require(pdftools)){install.packages('pdftools');require(pdftools)}
floc = 'enepa_repository/documents/'
dir.create('enepa_repository/text_as_datatable')
tfloc = 'enepa_repository/text_as_datatable/'
docs = list.files(floc,recursive = T,full.names = T)
text_docs = list.files(tfloc,recursive = T,full.names = T)
doc_record = fread('enepa_repository/meta_data/eis_document_record.csv')
mcores = detectCores() / 2
doc_record = doc_record[PDF==T&!BAD_FILE,]
doc_record$subd = str_extract(doc_record$File_Name,'^[0-9]{4}')
text_names = paste0(tfloc,'/',doc_record$subd,'/',gsub('PDF$|pdf$','txt',doc_record$File_Name))
flt = list.files('enepa_repository/text_as_datatable/2013',full.names = T)
finfo = file.info(flt)
library(lubridate)
old = month(ymd_hms(finfo$mtime))!=5
pdf_list = list.files('enepa_repository/documents/',recursive = T,full.names = T,pattern = '^2020|^201[3-9]')
#pdf_list = pdf_list[grepl('^201[3-9]',basename(pdf_list))]
pdf_list = gsub('_{2,}','_',pdf_list)
text_list = list.files('enepa_repository/text_as_datatable/',recursive = T,full.names = T)
text_list = text_list[grepl('^2020|^201[3-9]',basename(text_list))]
#docs_unconverted = doc_record[!file.exists(text_names),]
#docs_unconverted[EIS.Number=='201600457',]
docs_unconverted <- pdf_list[!gsub('pdf$|PDF$','txt',basename(pdf_list)) %in% basename(text_list)]
docs_unconverted = docs_unconverted[grepl('2020',basename(docs_unconverted))]
finfo = file.size(pdf_list)
file.remove(pdf_list[finfo==0])
#docs_unconverted = doc_record[subd %in% 2013:2018,]
#mclapply(which(!test_names %in% flt),function(i) {
mclapply(1:length(docs_unconverted),function(i) {
rm(id);rm(temp_text);rm(temp_page)
#i = which(documents$FILE_NAME=='41909_95853_FSPLT3_1658799.pdf')
fname = docs_unconverted[i]
tname = gsub('enepa_repository/documents','enepa_repository/text_as_datatable',fname)
tname = gsub('pdf$|PDF$','txt',tname)
#if(file.exists(tname)){next}#temp = fread(tname);temp[,text:=NULL];all_page_dt = rbind(all_page_dt,temp,use.names=T,fill=T);next}
print(i)
temp_text = tryCatch({pdftools::pdf_text(fname)},error = function(e) NULL)
if(!is.null(temp_text) & length(temp_text)>0 & any(temp_text!='')){
temp_page = unlist(sapply(temp_text,function(x) x))
temp_page = gsub('\\s{1,}',' ',temp_page)
temp = data.table::data.table(Page = seq_along(temp_page),text = temp_page,stringsAsFactors = F)
temp$text[nchar(temp$text)>10000] <- ''
#temp = temp[!grepl('\\.{10,}',temp$text),]
temp$text = textclean::replace_non_ascii(temp$text)
#temp = temp[!grepl('^Figure [0-9]',temp$text),]
temp$text = gsub('\\s{1,}$','',temp$text)
#temp = temp[nchar(temp$text)>500,]
temp = temp[!duplicated(text)&text!='',]
#  if(file.exists(tname)&nrow(temp)==0){file.remove(tname)}
if(!file.exists(tname)|file.exists(tname)){fwrite(x = temp,file = tname,sep = '\t')}
}
},mc.cores = mcores,mc.cleanup = T,mc.preschedule = T)
if(!require(data.table)){install.packages('data.table');require(data.table)}
if(!require(stringr)){install.packages('stringr');require(stringr)}
if(!require(tidyverse)){install.packages('tidyverse');require(tidyverse)}
if(!require(doParallel)){install.packages('doParallel');require(doParallel)}
if(!require(pdftools)){install.packages('pdftools');require(pdftools)}
floc = 'enepa_repository/documents/'
dir.create('enepa_repository/text_as_datatable')
tfloc = 'enepa_repository/text_as_datatable/'
docs = list.files(floc,recursive = T,full.names = T)
text_docs = list.files(tfloc,recursive = T,full.names = T)
doc_record = fread('enepa_repository/meta_data/eis_document_record.csv')
mcores = detectCores() / 2
doc_record = doc_record[PDF==T&!BAD_FILE,]
doc_record$subd = str_extract(doc_record$File_Name,'^[0-9]{4}')
text_names = paste0(tfloc,'/',doc_record$subd,'/',gsub('PDF$|pdf$','txt',doc_record$File_Name))
flt = list.files('enepa_repository/text_as_datatable/2013',full.names = T)
finfo = file.info(flt)
library(lubridate)
old = month(ymd_hms(finfo$mtime))!=5
pdf_list = list.files('enepa_repository/documents/',recursive = T,full.names = T,pattern = '^2020|^201[3-9]')
#pdf_list = pdf_list[grepl('^201[3-9]',basename(pdf_list))]
pdf_list = gsub('_{2,}','_',pdf_list)
text_list = list.files('enepa_repository/text_as_datatable/',recursive = T,full.names = T)
text_list = text_list[grepl('^2020|^201[3-9]',basename(text_list))]
#docs_unconverted = doc_record[!file.exists(text_names),]
#docs_unconverted[EIS.Number=='201600457',]
docs_unconverted <- pdf_list[!gsub('pdf$|PDF$','txt',basename(pdf_list)) %in% basename(text_list)]
docs_unconverted = docs_unconverted[grepl('2020',basename(docs_unconverted))]
finfo = file.size(pdf_list)
file.remove(pdf_list[finfo==0])
#docs_unconverted = doc_record[subd %in% 2013:2018,]
#mclapply(which(!test_names %in% flt),function(i) {
mclapply(1:length(docs_unconverted),function(i) {
rm(id);rm(temp_text);rm(temp_page)
#i = which(documents$FILE_NAME=='41909_95853_FSPLT3_1658799.pdf')
fname = docs_unconverted[i]
tname = gsub('enepa_repository/documents','enepa_repository/text_as_datatable',fname)
tname = gsub('pdf$|PDF$','txt',tname)
#if(file.exists(tname)){next}#temp = fread(tname);temp[,text:=NULL];all_page_dt = rbind(all_page_dt,temp,use.names=T,fill=T);next}
print(i)
temp_text = tryCatch({pdftools::pdf_text(fname)},error = function(e) NULL)
if(!is.null(temp_text) & length(temp_text)>0 & any(temp_text!='')){
temp_page = unlist(sapply(temp_text,function(x) x))
temp_page = gsub('\\s{1,}',' ',temp_page)
temp = data.table::data.table(Page = seq_along(temp_page),text = temp_page,stringsAsFactors = F)
temp$text[nchar(temp$text)>10000] <- ''
#temp = temp[!grepl('\\.{10,}',temp$text),]
temp$text = textclean::replace_non_ascii(temp$text)
#temp = temp[!grepl('^Figure [0-9]',temp$text),]
temp$text = gsub('\\s{1,}$','',temp$text)
#temp = temp[nchar(temp$text)>500,]
temp = temp[!duplicated(text)&text!='',]
#  if(file.exists(tname)&nrow(temp)==0){file.remove(tname)}
if(!file.exists(tname)|file.exists(tname)){fwrite(x = temp,file = tname,sep = '\t')}
}
},mc.cores = mcores,mc.cleanup = T,mc.preschedule = T)
